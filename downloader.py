# -*- coding: utf-8 -*-
"""downloader.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1k7eZXUS8nQ-ruCo3l2c-GApGSqEkbbOa
"""

# Commented out IPython magic to ensure Python compatibility.
# %%capture
# %cd /content
# !rm -rf vape-classification/
# !git clone https://github.com/sschott20/youtube-vape-classification
# %cd vape-classification
# %mkdir 'models'

import pandas as pd

data = pd.read_excel('/content/youtube-vape-classification/condensed_extra_data.xlsx')
new_data = data.iloc[:2].copy()

for i, row in data.iterrows():
    if '5' in row['condensed_model_1']:
        new_data = new_data.append(row)
    elif '2' in row['condensed_model_1']:
        new_data = new_data.append(row)

print(new_data.columns)
new_data.to_excel('labels25.xlsx')

all_data = pd.read_csv('/content/vape-metadata.csv')


new_data = all_data[['Video_Title', 'Video_ID', 'Video_URL', 'Channel_URL']].copy()
disclaimers = pd.read_excel('/content/disclaimers (1).xlsx')

new_data['disclaimer'] = np.nan
for i, row in disclaimers.iterrows():
    # print(row)
    # print(new_data.loc[new_data['Video_ID'] == row['Video_ID']])
    if row['anti vape sentament'] == 'x':
        new_data.at[new_data.index[new_data['Video_ID'] == row['Video_ID']], 'disclaimer'] = 2
        # new_data.at[row['Unnamed: 0'], 'disclaimer'] = 2
    elif row['anti vape sentament'] == 1:
        new_data.at[new_data.index[new_data['Video_ID'] == row['Video_ID']], 'disclaimer'] = 1

        # new_data.at[row['Unnamed: 0'], 'disclaimer'] = 1
    elif row['anti vape sentament'] == 0:
        new_data.at[new_data.index[new_data['Video_ID'] == row['Video_ID']], 'disclaimer'] = 0

        # new_data.at[row['Unnamed: 0'], 'disclaimer'] = 0
    # break

new_data.to_excel('disclaimers_coding.xlsx')



import os, glob
import pandas as pd
import networkx as nx
import matplotlib.pyplot as plt
import pandas as pd
import numpy as np
from zipfile import ZipFile
# import pytube

with ZipFile('/content/vape-classification/channel_data.zip', 'r') as zipObj:
   zipObj.extractall()

channel_data_root = "/content/vape-classification/content/vape-classification/channels_data"

vids = pd.read_csv(path, sep=',')
vidsurl=vids.Video_URL
vidsid=vids.Video_ID
#where to save
SAVE_PATH = "/content/videos" #to_do
 

#link = "https://www.youtube.com/watch?v=mpjREfvZiDs"
n=0
for i in vidsurl:
    yt = pytube.YouTube(i)
    try:
        stream = yt.streams.first()

        stream.download(SAVE_PATH,filename=vidsid[n])
    except:
        print(n,i)
   
    n=n+1
    
print('Task Completed!')